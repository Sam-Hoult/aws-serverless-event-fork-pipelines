AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >
  This Amazon SNS Fork pipeline indexes events from the given Amazon SNS topic in an Amazon Elasticsearch Service domain for search
  and analytics, using an Amazon Kinesis Data Firehose stream.

Metadata:
  AWS::ServerlessRepo::Application:
    Name: fork-event-search-analytics-pipeline
    Description: >
      This Amazon SNS Fork pipeline indexes events from the given Amazon SNS topic in an Amazon Elasticsearch Service domain for search
      and analytics, using an Amazon Kinesis Data Firehose stream.
    Author: AWS
    SpdxLicenseId: MIT-0
    LicenseUrl: ../../LICENSE
    ReadmeUrl: README.md
    Labels: [sns, sns-fork-pattern, event, search, analytics]
    HomePageUrl: https://github.com/aws-samples/aws-serverless-sns-fork-pattern
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/aws-samples/aws-serverless-sns-fork-pattern/tree/1.0.0/pipelines/event-search-analytics-pipeline

Parameters:
  SNSTopicArn:
    Description: SNS Topic ARN whose events should be sent to Elasticsearch.
    Type: String
  ElasticsearchIndexName:
    Description: Elasticsearch index name to write to.
    Type: String
  ElasticsearchTypeName:
    Description: The Elasticsearch type name that Amazon ES adds to documents when indexing data.
    Type: String
  ElasticsearchDomainArn:
    Description: >
      This parameter can be used to specify the ARN of an external Elasticsearch Domain that this app should write events to. If no value is given,
      the app creates its own ElasticSearch domain and writes events to it.
    Type: String
    Default: ''
  SubscriptionFilterPolicy:
    Description: >
      SNS Topic Subscription FilterPolicy as a JSON string. This optional parameter allows you to configure message filtering for events 
      processed by this app. See https://docs.aws.amazon.com/sns/latest/dg/message-filtering.html for details.
    Type: String
    Default: ''
  ElasticsearchIndexRotationPeriod:
    Description: The frequency of Elasticsearch index rotation.
    Type: String
    Default: NoRotation
  RetryDurationInSeconds:
    Description: Number of seconds to retry if events cannot be written to Elasticsearch index.
    Type: Number
    MinValue: 0
    MaxValue: 7200
    Default: 300
  BackupPrefix:
    Description: Prefix used for S3 backup files (events are saved to S3 if they can't be written to the Elasticsearch cluster).
    Type: String
    Default: 'backup/'
  BackupCompressionFormat:
    Description: Compression format for S3 backup files (events are saved to S3 if they can't be written to the Elasticsearch cluster).
    Type: String
    AllowedValues:
      - UNCOMPRESSED
      - GZIP
      - ZIP
      - Snappy
    Default: UNCOMPRESSED
  BufferingIntervalInSeconds:
    Description: >
      Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination.
      See https://docs.aws.amazon.com/firehose/latest/APIReference/API_BufferingHints.html for details.
    Type: Number
    MinValue: 60
    MaxValue: 900
    Default: 300
  BufferingSizeInMBs:
    Description: >
      Buffer incoming data to the specified size, in MBs, before delivering it to the destination. Note, if you specify a DataTransformationLambdaFunctionArn, you should
      not set this higher than 6. See https://docs.aws.amazon.com/firehose/latest/dev/data-transformation.html for details.
    Type: Number
    MinValue: 1
    MaxValue: 128
    Default: 5
  DataTransformationLambdaFunctionArn:
    Description: >
      ARN of data transformation Lambda function. This optional parameter allows you to configure a Lambda function to be invoked by
      Kinesis Firehose to transformation incoming events before they are saved to Elasticsearch. For example, you could use this to remove sensitive
      data to meet compliance regulations.
    Type: String
    Default: ''
  LogLevel:
    Type: String
    Description: Log level for Lambda function logging, e.g., ERROR, INFO, DEBUG, etc
    Default: INFO

Conditions:
  # TODO: uncomment once AWS::Serverless::Application supports Condition
  #FilterPolicyEnabled:
  #  !Not [!Equals [!Ref SubscriptionFilterPolicy, '']]
  DataTransformationEnabled:
    !Not [!Equals [!Ref DataTransformationLambdaFunctionArn, '']]
  CreateAnalyticsDomain:
    !Equals [!Ref ElasticsearchDomainArn, '']

Resources:
  AnalyticsSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt AnalyticsQueue.Arn
      RawMessageDelivery: true
      TopicArn: !Ref SNSTopicArn

  AnalyticsQueue:
    Type: AWS::SQS::Queue

  AnalyticsQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref AnalyticsQueue
      PolicyDocument:
        Version: '2012-10-17'
        Id: AnalyticsQueuePolicy
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - sns.amazonaws.com
            Action:
              - sqs:SendMessage
            Resource:
              - !GetAtt AnalyticsQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref SNSTopicArn

  AnalyticsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: process_records.handler
      Runtime: python3.7
      Tracing: Active
      Timeout: 5
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
          FIREHOSE_DELIVERY_STREAM_NAME: !Ref AnalyticsStream
      Policies:
        - Statement:
            Effect: Allow
            Action:
              - firehose:PutRecord
            Resource:
              - !Sub ${AnalyticsStream.Arn}
      Events:
        Mapping:
          Type: SQS
          Properties:
            Queue: !GetAtt AnalyticsQueue.Arn
            BatchSize: 10

  AnalyticsStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamType: DirectPut
      ElasticsearchDestinationConfiguration:
        DomainARN: !If [CreateAnalyticsDomain, !GetAtt AnalyticsDomain.DomainArn, !Ref ElasticsearchDomainArn]
        IndexName: !Ref ElasticsearchIndexName
        TypeName: !Ref ElasticsearchTypeName
        IndexRotationPeriod: !Ref ElasticsearchIndexRotationPeriod
        RetryOptions:
          DurationInSeconds: !Ref RetryDurationInSeconds
        RoleARN: !GetAtt AnalyticsStreamRole.Arn
        BufferingHints:
          IntervalInSeconds: !Ref BufferingIntervalInSeconds
          SizeInMBs: !Ref BufferingSizeInMBs
        S3BackupMode: FailedDocumentsOnly
        S3Configuration:
          BucketARN: !GetAtt AnalyticsDeadLetterBucket.Arn
          RoleARN: !GetAtt AnalyticsStreamRole.Arn
          Prefix: !Ref BackupPrefix
          BufferingHints:
            IntervalInSeconds: 60
            SizeInMBs: 5
          CompressionFormat: !Ref BackupCompressionFormat
        ProcessingConfiguration: !If
          - DataTransformationEnabled
          - Enabled: true
            Processors:
              - Type: Lambda
                Parameters:
                  - ParameterName: LambdaArn
                    ParameterValue: !Ref DataTransformationLambdaFunctionArn
          - !Ref AWS::NoValue

  AnalyticsStreamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - firehose.amazonaws.com
            Action:
            - sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Sub ${AWS::AccountId}
      Policies:
        - PolicyName: fh-policy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - s3:AbortMultipartUpload
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                  - s3:PutObject
                Resource:
                  - !GetAtt AnalyticsDeadLetterBucket.Arn
                  - !Sub ${AnalyticsDeadLetterBucket.Arn}/*
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kinesisfirehose/*
              - Effect: "Allow"
                Action:
                  - es:DescribeElasticsearchDomain
                  - es:DescribeElasticsearchDomains
                  - es:DescribeElasticsearchDomainConfig
                  - es:ESHttpGet
                  - es:ESHttpPut
                  - es:ESHttpPost
                Resource:
                  - !If [CreateAnalyticsDomain, !GetAtt AnalyticsDomain.DomainArn, !Ref ElasticsearchDomainArn]
                  - !Sub
                      - ${SearchDomainArn}/*
                      - SearchDomainArn: !If [CreateAnalyticsDomain, !GetAtt AnalyticsDomain.DomainArn, !Ref ElasticsearchDomainArn]
              - !If
                  - DataTransformationEnabled
                  - Effect: Allow
                    Action:
                      - lambda:InvokeFunction
                    Resource:
                      - !Ref DataTransformationLambdaFunctionArn
                  - !Ref AWS::NoValue

  AnalyticsDeadLetterBucket:
    Type: AWS::S3::Bucket

  AnalyticsSubscriptionFilterPolicy:
    Type: AWS::Serverless::Application
    # TODO: uncomment once AWS::Serverless::Application supports Condition
    #Condition: FilterPolicyEnabled
    Properties:
      Location: ../../util/sns-subscription-filter-policy-string/.aws-sam/build/template.yaml
      Parameters:
        SNSTopicArn: !Ref SNSTopicArn
        SubscriptionArn: !Ref AnalyticsSubscription
        SubscriptionFilterPolicy: !Ref SubscriptionFilterPolicy
        LogLevel: !Ref LogLevel

  AnalyticsDomain:
    Condition: CreateAnalyticsDomain
    Type: AWS::Elasticsearch::Domain
    Properties:
      ElasticsearchVersion: '6.3'
      ElasticsearchClusterConfig:
        InstanceCount: 2
        ZoneAwarenessEnabled: true
        InstanceType: m3.medium.elasticsearch
        DedicatedMasterEnabled: true
        DedicatedMasterType: m3.medium.elasticsearch
        DedicatedMasterCount: 3
      EBSOptions:
        EBSEnabled: true
        VolumeType: gp2
        VolumeSize: 20

Outputs:
  AnalyticsDeadLetterBucketName:
    Description: Dead-letter S3 bucket name
    Value: !Ref AnalyticsDeadLetterBucket
  AnalyticsDeadLetterBucketArn:
    Description: Dead-letter S3 bucket ARN
    Value: !GetAtt AnalyticsDeadLetterBucket.Arn
  AnalyticsDomainName:
    Description: Analytics ES domain name
    Value: !Ref AnalyticsDomain
    Condition: CreateAnalyticsDomain
  AnalyticsDomainArn:
    Description: Analytics ES domain ARN
    Value: !GetAtt AnalyticsDomain.DomainArn
    Condition: CreateAnalyticsDomain
  AnalyticsDomainEndpoint:
    Description: Analytics ES domain endpoint
    Value: !GetAtt AnalyticsDomain.DomainEndpoint
    Condition: CreateAnalyticsDomain
