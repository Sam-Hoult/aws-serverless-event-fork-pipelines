AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >-
  This AWS Event Fork Pipelines app buffers events from the given Amazon SNS topic into an Amazon SQS queue, so it can replay these events
  back to another pipeline, in a disaster recovery scenario.

Metadata:
  AWS::ServerlessRepo::Application:
    Name: fork-event-replay-pipeline
    Description: >-
      This AWS Event Fork Pipelines app buffers events from the given Amazon SNS topic into an Amazon SQS queue, so it can replay these events
      back to another pipeline, in a disaster recovery scenario.
    Author: AWS
    SpdxLicenseId: MIT-0
    LicenseUrl: ../../LICENSE
    ReadmeUrl: README.md
    Labels: [sns, aws-event-fork-pipelines, event, replay]
    HomePageUrl: https://github.com/aws-samples/aws-serverless-event-fork-pipelines
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/aws-samples/aws-serverless-event-fork-pipelines/tree/1.0.0/pipelines/event-replay-pipeline

Parameters:
  TopicArn:
    Description: The ARN of the SNS topic to which this instance of the pipeline should be subscribed.
    Type: String
  DestinationQueueName:
    Description: The name of the SQS queue to which the Lambda replay function forwards events, once the replay trigger is enabled. The queue must be in the same accout and region as this pipeline.
    Type: String
  SubscriptionFilterPolicy:
    Description: "[Optional] The SNS subscription filter policy, in JSON format, used for filtering the incoming events. The filter policy decides which events are processed by this pipeline. If you don’t enter any value, then no filtering is used, meaning all events are processed."
    Type: String
    Default: ''
  ReplayQueueRetentionPeriodInSeconds:
    Description: "[Optional] The amount of seconds for which the SQS replay queue should keep the incoming events. If you don’t enter any value, then 1,209,600 (14 days) is used."
    Type: Number
    MinValue: 60
    MaxValue: 1209600
    Default: 1209600
  LogLevel:
    Type: String
    Description: "[Optional] The level used for logging the execution of the Lambda function that polls events from the SQS queue. Four options are available, namely DEBUG, INFO, WARNING, and ERROR. If you don’t enter any value, then INFO is used."
    Default: INFO

Conditions:
  FilterPolicyEnabled:
    !Not [!Equals [!Ref SubscriptionFilterPolicy, '']]

Resources:
  ReplaySubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt ReplayQueue.Arn
      RawMessageDelivery: true
      TopicArn: !Ref TopicArn

  ReplayQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: !Ref ReplayQueueRetentionPeriodInSeconds

  ReplayQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref ReplayQueue
      PolicyDocument:
        Version: '2012-10-17'
        Id: ReplayQueuePolicy
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - sns.amazonaws.com
            Action:
              - sqs:SendMessage
            Resource:
              - !GetAtt ReplayQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref TopicArn

  ReplayFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: replay_messages.handler
      Runtime: python3.7
      Tracing: Active
      Timeout: 5
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
          DESTINATION_SQS_QUEUE_NAME: !Ref DestinationQueueName
      Policies:
        - Statement:
            Effect: Allow
            Action:
              - sqs:GetQueueUrl
              - sqs:SendMessage*
            Resource:
              - !Sub arn:${AWS::Partition}:sqs:${AWS::Region}:${AWS::AccountId}:${DestinationQueueName}
      Events:
        Mapping:
          Type: SQS
          Properties:
            Queue: !GetAtt ReplayQueue.Arn
            BatchSize: 10
            Enabled: false

  ReplaySubscriptionFilterPolicy:
    Type: AWS::Serverless::Application
    Condition: FilterPolicyEnabled
    Properties:
      Location: ../../util/sns-subscription-filter-policy-string/.aws-sam/build/template.yaml
      Parameters:
        TopicArn: !Ref TopicArn
        SubscriptionArn: !Ref ReplaySubscription
        SubscriptionFilterPolicy: !Ref SubscriptionFilterPolicy
        LogLevel: !Ref LogLevel

Outputs:
  ReplayFunctionName:
    Description: Replay Lambda function name
    Value: !Ref ReplayFunction
  ReplayFunctionArn:
    Description: Replay Lambda function ARN
    Value: !GetAtt ReplayFunction.Arn
  ReplayFunctionMappingId:
    Description: Identifier of the event source mapping that connects the Replay Lambda function to the SQS queue
    Value: !Ref ReplayFunctionMapping
