AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >-
  This AWS Event Fork Pipelines app backs up events from the given Amazon SNS topic to an Amazon S3 bucket, using an Amazon Kinesis Data
  Firehose stream.

Metadata:
  AWS::ServerlessRepo::Application:
    Name: fork-event-storage-backup-pipeline
    Description: >-
      This AWS Event Fork Pipelines app backs up events from the given Amazon SNS topic to an Amazon S3 bucket, using an Amazon Kinesis Data
      Firehose stream.
    Author: AWS
    SpdxLicenseId: MIT-0
    LicenseUrl: ../../LICENSE
    ReadmeUrl: README.md
    Labels: [sns, aws-event-fork-pipelines, event, backup]
    HomePageUrl: https://github.com/aws-samples/aws-serverless-event-fork-pipelines
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/aws-samples/aws-serverless-event-fork-pipelines/tree/1.0.0/pipelines/event-storage-backup-pipeline

Parameters:
  TopicArn:
    Description: SNS Topic ARN whose messages should be backed up to S3.
    Type: String
  SubscriptionFilterPolicy:
    Description: >-
      SNS Topic Subscription FilterPolicy as a JSON string. This optional parameter allows you to configure message filtering for messages
      processed by this app. See https://docs.aws.amazon.com/sns/latest/dg/message-filtering.html for details.
    Type: String
    Default: ''
  StreamPrefix:
    Description: Prefix used for S3 backup files
    Type: String
    Default: 'backup/'
  StreamCompressionFormat:
    Description: Compression format for S3 backup files
    Type: String
    AllowedValues:
      - UNCOMPRESSED
      - GZIP
      - ZIP
      - Snappy
    Default: UNCOMPRESSED
  EnableBucketEncryption:
    Description: Set to true to enable server-side encryption on the S3 backup bucket using the default aws/s3 AWS KMS master key.
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
  StreamBufferingIntervalInSeconds:
    Description: >-
      Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination.
      See https://docs.aws.amazon.com/firehose/latest/APIReference/API_BufferingHints.html for details.
    Type: Number
    MinValue: 60
    MaxValue: 900
    Default: 300
  StreamBufferingSizeInMBs:
    Description: >-
      Buffer incoming data to the specified size, in MBs, before delivering it to the destination. Note, if you specify a DataTransformationFunctionArn, you should
      not set this higher than 6. See https://docs.aws.amazon.com/firehose/latest/dev/data-transformation.html for details.
    Type: Number
    MinValue: 1
    MaxValue: 128
    Default: 5
  DataTransformationFunctionArn:
    Description: >-
      ARN of data transformation Lambda function. This optional parameter allows you to configure a Lambda function to be invoked by
      Kinesis Firehose to transformation incoming events before they are saved to S3. For example, you could use this to remove sensitive
      data to meet compliance regulations.
    Type: String
    Default: ''
  LogLevel:
    Type: String
    Description: Log level for Lambda function logging, e.g., ERROR, INFO, DEBUG, etc
    Default: INFO

Conditions:
  DataTransformationEnabled:
    !Not [!Equals [!Ref DataTransformationFunctionArn, '']]
  BucketEncryptionEnabled:
    !Equals [!Ref EnableBucketEncryption, 'true']
  FilterPolicyEnabled:
    !Not [!Equals [!Ref SubscriptionFilterPolicy, '']]

Resources:
  BackupSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt BackupQueue.Arn
      RawMessageDelivery: true
      TopicArn: !Ref TopicArn

  BackupQueue:
    Type: AWS::SQS::Queue

  BackupQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref BackupQueue
      PolicyDocument:
        Version: '2012-10-17'
        Id: BackupQueuePolicy
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - sns.amazonaws.com
            Action:
              - sqs:SendMessage
            Resource:
              - !GetAtt BackupQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref TopicArn

  BackupFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: process_records.handler
      Runtime: python3.7
      Tracing: Active
      Timeout: 5
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
          FIREHOSE_DELIVERY_STREAM_NAME: !Ref BackupStream
      Policies:
        - Statement:
            Effect: Allow
            Action:
              - firehose:PutRecord
            Resource:
              - !Sub ${BackupStream.Arn}
      Events:
        Mapping:
          Type: SQS
          Properties:
            Queue: !GetAtt BackupQueue.Arn
            BatchSize: 10

  BackupStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        BucketARN: !GetAtt BackupBucket.Arn
        RoleARN: !GetAtt BackupStreamRole.Arn
        Prefix: !Ref StreamPrefix
        BufferingHints:
          IntervalInSeconds: !Ref StreamBufferingIntervalInSeconds
          SizeInMBs: !Ref StreamBufferingSizeInMBs
        CompressionFormat: !Ref StreamCompressionFormat
        ProcessingConfiguration: !If
          - DataTransformationEnabled
          - Enabled: true
            Processors:
              - Type: Lambda
                Parameters:
                  - ParameterName: LambdaArn
                    ParameterValue: !Ref DataTransformationFunctionArn
          - !Ref AWS::NoValue

  BackupStreamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - firehose.amazonaws.com
            Action:
            - sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Sub ${AWS::AccountId}
      Policies:
        - PolicyName: fh-policy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - s3:AbortMultipartUpload
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                  - s3:PutObject
                Resource:
                  - !GetAtt BackupBucket.Arn
                  - !Sub ${BackupBucket.Arn}/*
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kinesisfirehose/*
              - !If
                  - DataTransformationEnabled
                  - Effect: Allow
                    Action:
                      - lambda:InvokeFunction
                    Resource:
                      - !Ref DataTransformationFunctionArn
                  - !Ref AWS::NoValue

  BackupBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption: !If
        - BucketEncryptionEnabled
        - ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: aws:kms
        - !Ref AWS::NoValue

  BackupSubscriptionFilterPolicy:
    Type: AWS::Serverless::Application
    Condition: FilterPolicyEnabled
    Properties:
      Location: ../../util/sns-subscription-filter-policy-string/.aws-sam/build/template.yaml
      Parameters:
        TopicArn: !Ref TopicArn
        SubscriptionArn: !Ref BackupSubscription
        SubscriptionFilterPolicy: !Ref SubscriptionFilterPolicy
        LogLevel: !Ref LogLevel

Outputs:
  BackupBucketName:
    Description: Backup S3 bucket name
    Value: !Ref BackupBucket
  BackupBucketArn:
    Description: Backup S3 bucket ARN
    Value: !GetAtt BackupBucket.Arn
