AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  This checkout pipeline is meant to be nested in the example e-commerce application that implements the Amazon SNS Fork pattern.

Metadata:
  AWS::ServerlessRepo::Application:
    Name: fork-example-ecommerce-checkout-pipeline
    Description: >
      This checkout pipeline is meant to be nested in the example e-commerce application that implements the Amazon SNS Fork pattern.
    Author: AWS
    SpdxLicenseId: MIT-0
    LicenseUrl: ../../../../LICENSE
    ReadmeUrl: ../README.md
    Labels: [sns, sns-fork-pattern, example, e-commerce]
    HomePageUrl: https://github.com/aws-samples/aws-serverless-sns-fork-pattern
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/aws-samples/aws-serverless-sns-fork-pattern/tree/1.0.0/examples/ecommerce-app/checkokut-pipeline

Parameters:
  SNSTopicArn:
    Description: Checkout events SNS Topic ARN
    Type: String
  LogLevel:
    Type: String
    Description: Log level for Lambda function logging, e.g., ERROR, INFO, DEBUG, etc
    Default: INFO

Resources:
  CheckoutSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: sqs
      Endpoint: !GetAtt CheckoutQueue.Arn
      RawMessageDelivery: true
      TopicArn: !Ref SNSTopicArn

  CheckoutQueue:
    Type: AWS::SQS::Queue

  CheckoutQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref CheckoutQueue
      PolicyDocument:
        Version: '2012-10-17'
        Id: CheckoutQueuePolicy
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - sns.amazonaws.com
            Action:
              - sqs:SendMessage
            Resource:
              - !GetAtt CheckoutQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref SNSTopicArn

  CheckoutFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: process_records.handler
      Runtime: python3.6
      Tracing: Active
      Timeout: 5
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
          TABLE_NAME: !Ref CheckoutTable
          BUG_ENABLED: 'false'
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CheckoutTable
      Events:
        Mapping:
          Type: SQS
          Properties:
            Queue: !GetAtt CheckoutQueue.Arn
            BatchSize: 10

  CheckoutTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: CustomerId
          AttributeType: S
        - AttributeName: DateOrderId
          AttributeType: S
      KeySchema:
        - AttributeName: CustomerId
          KeyType: HASH
        - AttributeName: DateOrderId
          KeyType: RANGE

Outputs:
  CheckoutFunctionName:
    Description: Checkout Lambda function name
    Value: !Ref CheckoutFunction
  CheckoutFunctionArn:
    Description: Checkout Lambda function ARN
    Value: !GetAtt CheckoutFunction.Arn
  CheckoutTableName:
    Description: Checkout DynamoDB table name
    Value: !Ref CheckoutTable
  CheckoutTableArn:
    Description: Checkout DynamoDB table ARN
    Value: !GetAtt CheckoutTable.Arn
  CheckoutQueueUrl:
    Description: Checkout SQS queue URL
    Value: !Ref CheckoutQueue
  CheckoutQueueArn:
    Description: Checkout SQS queue ARN
    Value: !GetAtt CheckoutQueue.Arn
  CheckoutQueueName:
    Description: Checkout SQS queue name
    Value: !GetAtt CheckoutQueue.QueueName
