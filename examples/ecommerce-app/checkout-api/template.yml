AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >-
  This serverless application is an example of using AWS Event Fork Pipelines apps in an e-commerce use case.

Metadata:
  AWS::ServerlessRepo::Application:
    Name: fork-example-ecommerce-checkout-api
    Description: >-
      This serverless application is an example of using the AWS Event Fork Pipelines apps in an e-commerce use case.
    Author: AWS
    SpdxLicenseId: MIT-0
    LicenseUrl: ../../../LICENSE
    ReadmeUrl: README.md
    Labels: [sns, aws-event-fork-pipelines, example, e-commerce]
    HomePageUrl: https://github.com/aws-samples/aws-serverless-event-fork-pipelines
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/aws-samples/aws-serverless-event-fork-pipelines/tree/1.0.0/examples/ecommerce-app/checkout-api

Parameters:
  LogLevel:
    Type: String
    Description: Log level for Lambda function logging, e.g., ERROR, INFO, DEBUG, etc
    Default: INFO

Resources:
  CheckoutApiBackendFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: api.checkout
      Runtime: python3.7
      Tracing: Active
      Timeout: 5
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
          TOPIC_ARN: !Ref CheckoutEventsTopic
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt CheckoutEventsTopic.TopicName
      Events:
        RestApi:
          Type: Api
          Properties:
            Path: /checkout
            Method: post

  RemoveSensitiveDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: remove_sensitive_data.handler
      Runtime: python3.7
      Tracing: Active
      Timeout: 60
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel

  CheckoutEventsTopic:
    Type: AWS::SNS::Topic

  CheckoutPipeline:
    Type: AWS::Serverless::Application
    Properties:
      Location: ../checkout-pipeline/.aws-sam/build/template.yaml
      Parameters:
        TopicArn: !Ref CheckoutEventsTopic
        LogLevel: !Ref LogLevel

  ReplayPipeline:
    Type: AWS::Serverless::Application
    Properties:
      Location: ../../../pipelines/event-replay-pipeline/.aws-sam/build/template.yaml
      Parameters:
        LogLevel: !Ref LogLevel
        TopicArn: !Ref CheckoutEventsTopic
        DestinationQueueName: !GetAtt CheckoutPipeline.Outputs.CheckoutQueueName
        ReplayQueueRetentionPeriodInSeconds: '1209600'

  BackupPipeline:
    Type: AWS::Serverless::Application
    Properties:
      Location: ../../../pipelines/event-storage-backup-pipeline/.aws-sam/build/template.yaml
      Parameters:
        LogLevel: !Ref LogLevel
        TopicArn: !Ref CheckoutEventsTopic
        StreamCompressionFormat: GZIP
        DataTransformationFunctionArn: !GetAtt RemoveSensitiveDataFunction.Arn
        StreamBufferingIntervalInSeconds: '60'
        StreamBufferingSizeInMBs: '5'
        BucketArn: !GetAtt BackupBucket.Arn
  # Backup bucket with default encryption at rest enabled
  BackupBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms

  AnalyticsPipeline:
    Type: AWS::Serverless::Application
    Properties:
      Location: ../../../pipelines/event-search-analytics-pipeline/.aws-sam/build/template.yaml
      Parameters:
        LogLevel: !Ref LogLevel
        TopicArn: !Ref CheckoutEventsTopic
        SearchIndexName: checkout_events
        SearchTypeName: checkout
        StreamRetryDurationInSeconds: '30'
        DataTransformationFunctionArn: !GetAtt RemoveSensitiveDataFunction.Arn
        StreamBufferingIntervalInSeconds: '60'
        StreamBufferingSizeInMBs: '5'
        SubscriptionFilterPolicy: |
          {
              "amount": [
                  { "numeric": [ ">=", 100 ] }
              ]
          }

Outputs:
  CheckoutApiUri:
    Description: Checkout API Prod stage URI
    Value: !Sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/checkout
  CheckoutApiBackendFunctionName:
    Description: Checkout API handler Function Name
    Value: !Ref CheckoutApiBackendFunction
  CheckoutApiBackendFunctionArn:
    Description: Checkout API handler Function ARN
    Value: !GetAtt CheckoutApiBackendFunction.Arn
  CheckoutEventsTopicName:
    Description: Checkout events SNS topic name
    Value: !GetAtt CheckoutEventsTopic.TopicName
  CheckoutEventsTopicArn:
    Description: Checkout events SNS topic ARN
    Value: !Ref CheckoutEventsTopic
