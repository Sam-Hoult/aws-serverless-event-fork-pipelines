AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: checkout-api

Parameters:
  LogLevel:
    Type: String
    Description: Log level for Lambda function logging, e.g., ERROR, INFO, DEBUG, etc
    Default: INFO

Resources:
  Checkout:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: api.checkout
      Runtime: python3.6
      Tracing: Active
      Timeout: 5
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
          TOPIC_ARN: !Ref CheckoutEvents
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt CheckoutEvents.TopicName
      Events:
        CheckoutApi:
          Type: Api
          Properties:
            Path: /checkout
            Method: post


  CheckoutEvents:
    Type: AWS::SNS::Topic

  Orders:
    Type: AWS::Serverless::Application
    Properties:
      Location: ../../checkout-pipeline/dist/template.yml
      Parameters:
        SNSTopicArn: !Ref CheckoutEvents
        LogLevel: !Ref LogLevel

  OrdersReplay:
    Type: AWS::Serverless::Application
    Properties:
      Location: ../../../../pipelines/event-replay-pipeline/dist/template.yml
      Parameters:
        LogLevel: !Ref LogLevel
        SNSTopicArn: !Ref CheckoutEvents
        DestinationSQSQueueName: !GetAtt Orders.Outputs.QueueName
        ReplayBufferRetentionPeriodInSeconds: '1209600'

  Backup:
    Type: AWS::Serverless::Application
    Properties:
      Location: ../../../../pipelines/event-store-backup-pipeline/dist/template.yml
      Parameters:
        LogLevel: !Ref LogLevel
        SNSTopicArn: !Ref CheckoutEvents
        BackupCompressionFormat: GZIP
        # TODO: remove sensitive data

  Analytics:
    Type: AWS::Serverless::Application
    Properties:
      Location: ../../../../pipelines/event-search-analytics-pipeline/dist/template.yml
      Parameters:
        LogLevel: !Ref LogLevel
        SNSTopicArn: !Ref CheckoutEvents
        ElasticsearchIndexName: checkout_events
        ElasticsearchTypeName: checkout
        SubscriptionFilterPolicy: |
          {
              "amount": [
                  { "numeric": [ ">=", 100 ] }
              ]
          }
        # TODO: remove sensitive data

Outputs:
  CheckoutApiUri:
    Description: "Checkout API Prod stage URL"
    Value: !Sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/checkout
  CheckoutFunctionName:
    Description: "Checkout API handler Function Name"
    Value: !Ref Checkout
  CheckoutFunctionArn:
    Description: "Checkout API handler Function ARN"
    Value: !GetAtt Checkout.Arn
  CheckoutEventsTopicName:
    Description: "Checkout events Topic Name"
    Value: !GetAtt CheckoutEvents.TopicName
  CheckoutEventsTopicArn:
    Description: "Checkout events Topic ARN"
    Value: !Ref CheckoutEvents
