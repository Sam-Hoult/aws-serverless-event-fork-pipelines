AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  This serverless application is an example of using the SNS Fork pattern pipeline apps in an e-commerce use case.

Parameters:
  LogLevel:
    Type: String
    Description: Log level for Lambda function logging, e.g., ERROR, INFO, DEBUG, etc
    Default: INFO

Resources:
  Checkout:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: api.checkout
      Runtime: python3.6
      Tracing: Active
      Timeout: 5
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
          TOPIC_ARN: !Ref CheckoutEvents
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt CheckoutEvents.TopicName
      Events:
        CheckoutApi:
          Type: Api
          Properties:
            Path: /checkout
            Method: post

  RemoveSensitiveData:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: remove_sensitive_data.handler
      Runtime: python3.6
      Tracing: Active
      Timeout: 60
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel

  CheckoutEvents:
    Type: AWS::SNS::Topic

  Orders:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/fork-example-ecommerce-checkout-pipeline
        SemanticVersion: 1.0.0
      Parameters:
        SNSTopicArn: !Ref CheckoutEvents
        LogLevel: !Ref LogLevel

  OrdersReplay:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/fork-event-replay-pipeline
        SemanticVersion: 1.0.0
      Parameters:
        LogLevel: !Ref LogLevel
        SNSTopicArn: !Ref CheckoutEvents
        DestinationSQSQueueName: !GetAtt Orders.Outputs.QueueName
        ReplayBufferRetentionPeriodInSeconds: '1209600'

  Backup:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/fork-event-storage-backup-pipeline
        SemanticVersion: 1.0.0
      Parameters:
        LogLevel: !Ref LogLevel
        SNSTopicArn: !Ref CheckoutEvents
        BackupCompressionFormat: GZIP
        DataTransformationLambdaFunctionArn: !GetAtt RemoveSensitiveData.Arn
        BufferingIntervalInSeconds: '60'
        BufferingSizeInMBs: '5'
        EnableBucketEncryption: 'true'

  Analytics:
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/fork-event-search-analytics-pipeline
        SemanticVersion: 1.0.0
      Parameters:
        LogLevel: !Ref LogLevel
        SNSTopicArn: !Ref CheckoutEvents
        ElasticsearchIndexName: checkout_events
        ElasticsearchTypeName: checkout
        RetryDurationInSeconds: '30'
        DataTransformationLambdaFunctionArn: !GetAtt RemoveSensitiveData.Arn
        BufferingIntervalInSeconds: '60'
        BufferingSizeInMBs: '5'
        SubscriptionFilterPolicy: |
          {
              "amount": [
                  { "numeric": [ ">=", 100 ] }
              ]
          }

Outputs:
  CheckoutApiUri:
    Description: "Checkout API Prod stage URI"
    Value: !Sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/checkout
  CheckoutFunctionName:
    Description: "Checkout API handler Function Name"
    Value: !Ref Checkout
  CheckoutFunctionArn:
    Description: "Checkout API handler Function ARN"
    Value: !GetAtt Checkout.Arn
  CheckoutEventsTopicName:
    Description: "Checkout events SNS Topic Name"
    Value: !GetAtt CheckoutEvents.TopicName
  CheckoutEventsTopicArn:
    Description: "Checkout events Topic ARN"
    Value: !Ref CheckoutEvents
